
Arquivo q = SupportedFiles.getInstance().getType("pdf").newOne("/Users/hudsonschumaker/Downloads/temp/Pdf/CARTA_SERVICO_CIDADAO.pdf");
Arquivo w = SupportedFiles.getInstance().getType("java").newOne("/Users/hudsonschumaker/Downloads/jms/src/br/com/caelum/jms/TesteProdutorTopico.java");

System.out.println(SupportedFiles.getInstance().isSupported("xhtml"));

    

Path configFilePath = Paths.get("/Volumes/Data2/Material de estudo/");
Path configFilePath = Paths.get("/Users/hudsonschumaker/Downloads/");

//Path configFilePath = Paths.get("/Volumes/Data2/Material de estudo/Livros/pdf");

              Files.walk(configFilePath)
                            .filter(p -> SupportedFiles.getInstance().isSupported(HsUtil.getFileExtension(p.toString())))
                            .map(Path::normalize)
                            .sorted()
                            .collect(toList())
                            //.stream()
                            .parallelStream()
                            .forEach(p -> SupportedFiles
                                    .getInstance()
                                    .getType(HsUtil.getFileExtension(p.toString()))
                                    .newOne(p.normalize().toString(), p.getFileName().toString(), HsUtil.getFileExtension(p.toString()))
                                    .read());
              
              
                   
https://www.mkyong.com/mongodb/spring-data-mongodb-like-query-example/
https://stackoverflow.com/questions/3305561/how-to-query-mongodb-with-like

run ./mongod   
                
    COLLECTION.updateOne(Filters.eq("nome", "Joao"),new Document("$set", new Document("nome", "Joao Silva")));
    COLLECTION.deleteOne(Filters.eq("nome", "Joao Silva"));
